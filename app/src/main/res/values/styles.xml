<resources>

    <style name="AppBaseTheme" parent="Theme.AppCompat.Light">
        <item name="android:actionBarStyle">@style/MyActionBarTheme</item>

    </style>


    <style name="MyActionBarTheme" parent="AppBaseTheme">
        <item name="android:background">@drawable/title_bar</item>
        <item name="android:titleTextStyle">@style/MyActionBarTitleText</item>
        <item name="android:color">#fff</item>
        <item name="android:displayOptions">showHome|useLogo</item>
        <item name="displayOptions">showHome|useLogo</item>
        <item name="background">@drawable/title_bar</item>

    </style>
    <!-- ActionBar title text -->

    <!-- ActionBar styles -->
    <style name="MyActionBar"
        parent="@style/Widget.AppCompat.ActionBar">
        <item name="android:titleTextStyle">@style/MyActionBarTitleText</item>
        android:icon="@drawable/ic_action_camera"

        <!-- Support library compatibility -->
        <item name="titleTextStyle">@style/MyActionBarTitleText</item>
    </style>

    <!-- ActionBar title text -->
    <style name="MyActionBarTitleText"
        parent="@style/TextAppearance.AppCompat.Widget.ActionBar.Title">
        <item name="android:textColor">#fff</item>
        <!-- The textColor property is backward compatible with the Support Library -->
    </style>

    <!-- ActionBar tabs text -->
    <style name="MyActionBarTabText"
        parent="@style/Widget.AppCompat.ActionBar.TabText">
        <item name="android:textColor">#fff</item>
        <!-- The textColor property is backward compatible with the Support Library -->
    </style>
    <style name="AppTheme" parent="AppBaseTheme">

        <item name="android:editTextColor">#6a6a6a</item>
        <item name="android:textColorPrimary">#6a6a6a</item>
        <item name="android:textColorSecondary">#6a6a6a</item>
        <item name="android:textColorTertiary">#6a6a6a</item>
        <item name="android:textColorPrimaryInverse">#6a6a6a</item>
        <item name="android:textColorSecondaryInverse">#6a6a6a</item>
        <item name="android:textColorTertiaryInverse">#6a6a6a</item>

        <!-- You can change the background -->
        <item name="android:windowBackground">@drawable/bg</item>
        <item name="android:actionBarStyle">@style/MyActionBarTheme</item>

        <item name="actionBarStyle">@style/MyActionBarTheme</item>

        <!-- Change the font family with API 16+
                <item name="android:textStyle">bold</item>

           <item name="android:windowNoTitle">true</item>
        <item name="android:windowIsTranslucent">false</item>
        <item name="android:windowIsFloating">false</item>
        <item name="android:backgroundDimEnabled">true</item>
        android:fontFamily="sans-serif"
        android:fontFamily="sans-serif-light"
        android:fontFamily="sans-serif-condensed"
        android:fontFamily="sans-serif-thin" -->


        <!-- More font stuff from URL above
        android:fontFamily	 Font family (named by string) for the text.
        android:shadowColor	 Place a shadow of the specified color behind the text.
        android:shadowDx	 Horizontal offset of the shadow.
        android:shadowDy	 Vertical offset of the shadow.
        android:shadowRadius	 Radius of the shadow.
        android:textAllCaps	 Present the text in ALL CAPS.
        android:textColor	 Text color.
        android:textColorHighlight	 Color of the text selection highlight.
        android:textColorHint	 Color of the hint text.
        android:textColorLink	 Color of the links.
        android:textSize	 Size of the text.
        android:textStyle	 Style (bold, italic, bolditalic) for the text.
        android:typeface	 Typeface (normal, sans, serif, monospace) for the text.
        -->

    </style>

    <!-- You can define styles for single widgets. You can then assign that style to the
     element in activity_my.xml with style="@style/TextView" for example -->
    <style name="TextView1">
        <item name="android:textSize">30sp</item>
        <item name="android:textStyle">bold</item>
        <item name="android:textColor">#ffffff</item>

    </style>

    <!-- You can inherit a style you defined as well. You can also override parts.
     You can't do this with Android styles, but only with yours. -->
    <style name="EditText" parent="@style/TextView1">
        <item name="android:textStyle">normal</item>
    </style>

    <!-- You can both inherit and add to a style as well -->
    <style name="TextView1.TextView2">
        <item name="android:padding">30dp</item>
    </style>
    <style name="light">
        <item name="android:padding">10dp</item>

        <item name="android:background">@drawable/list_bg</item>
    </style>




    <style name="tabs">
        <item name="android:padding">5dp</item>

        <item name="android:layout_margin">20dp</item>
        <item name="android:background">@drawable/list_bg</item>
        </style>



    <style name="bar">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">50dp</item>

        <item name="android:scaleType">centerCrop</item>
        <item name="android:tileMode">clamp</item>




        <item name="android:layout_marginBottom">10dp</item>

        <item name="android:layout_marginRight">20dp</item>
        <item name="android:layout_marginLeft">20dp</item>


        <item name="android:background">@drawable/bar_bg</item>
    </style>


    <style name="datalist">

        <item name="android:layout_margin">30dp</item>
        <item name="android:background">#eee</item>
3
    </style>
    <style name="label">

        <item name="android:textSize">30sp</item>
        <item name="android:textStyle">bold</item>
    </style>

    <style name="labelData">
        <item name="android:textColor">#000</item>
        <item name="android:textStyle">bold</item>
    </style>
    <!-- You just keep adding periods to add to additional styles -->
    <style name="button">
        <item name="android:layout_marginTop">15dp</item>
    </style>

    <style name="barbt">


        <item name="android:scaleType">fitCenter</item>

        <item name="android:background">@android:color/transparent</item>


    </style>
    <!--
    <style name="TextView" parent="@android:style/Widget.TextView">
        <item name="android:textSize">55sp</item>
        <item name="android:textStyle">bold</item>
    </style>
    -->

    <!-- In the graphical layout you can try different default themes
    by clicking on the Theme button
    -->







</resources>
